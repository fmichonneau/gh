% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gh_token.R
\name{gh_token}
\alias{gh_token}
\title{Return the local user's GitHub Personal Access Token (PAT)}
\usage{
gh_token(api_url = NULL)
}
\arguments{
\item{api_url}{GitHub API URL. Defaults to the \code{GITHUB_API_URL} environment
variable, if set, and otherwise to \url{https://api.github.com}.}
}
\value{
A string of characters, if a PAT is found, or the empty
string, otherwise. For convenience, the return value has an S3 class in
order to ensure that simple printing strategies don't reveal the entire
PAT.
}
\description{
If gh can find a personal access token (PAT) via \code{gh_token()}, it includes
the PAT in its requests. Some requests succeed without a PAT, but many
require a PAT to prove the request is authorized by a specific GitHub user. A
PAT also helps with rate limiting. If your gh use is more than casual, you
want a PAT.

gh calls \code{\link[gitcreds:gitcreds_get]{gitcreds::gitcreds_get()}} with the \code{api_url}, which checks session
environment variables and then the local Git credential store for a PAT
appropriate to the \code{api_url}. Therefore, if you have previously used a PAT
with, e.g., command line Git, gh may retrieve and re-use it. You can call
\code{\link[gitcreds:gitcreds_get]{gitcreds::gitcreds_get()}} directly, yourself, if you want to see what is
found for a specific URL. If no matching PAT is found,
\code{\link[gitcreds:gitcreds_get]{gitcreds::gitcreds_get()}} errors, whereas \code{gh_token()} does not and,
instead, returns \code{""}.

See GitHub's documentation on \href{https://docs.github.com/en/github/authenticating-to-github/creating-a-personal-access-token}{Creating a personal access token},
or use \code{usethis::create_github_token()} for a guided experience, including
pre-selection of recommended scopes. Once you have a PAT, you can use
\code{\link[gitcreds:gitcreds_get]{gitcreds::gitcreds_set()}} to add it to the Git credential store. From that
point on, gh (via \code{\link[gitcreds:gitcreds_get]{gitcreds::gitcreds_get()}}) should be able to find it
without further effort on your part.

Until March 31st, 2021, GitHub tokens were formed by a string of 40
hexadecimal digits. After this date, newly generated tokens start with a
prefix (\code{ghp_} for personal access tokens), and are composed of lower and
upper case letters as well as digits and underscores. The total length of
tokens remains set at 40 characters. GitHub has indicated that starting in
June 2021, they plan to increase the length of PAT up to 255 characters. gh
validates tokens by checking that they are formed of either 40 hexadecimal
digits, or that they start with a prefix and are between 40 and 255
characters. More information about this change is available on \href{https://github.blog/changelog/2021-03-04-authentication-token-format-updates/}{GitHub's blog}.
}
\examples{
\dontrun{
gh_token()

format(gh_token())

str(gh_token())
}
}
